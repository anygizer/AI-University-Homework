package imy.lnu.ai.dfs;

import java.awt.event.ItemEvent;
import javax.swing.JComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;
import org.unikernel.lnu.ai.agents.api.Algorithm;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//imy.lnu.ai.dfs//DFS//EN",
autostore = false)
@TopComponent.Description(preferredID = "DFSTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = true)
@ActionID(category = "Window", id = "imy.lnu.ai.dfs.DFSTopComponent")
@ActionReference(path = "Menu/Window" /*
 * , position = 333
 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_DFSAction",
preferredID = "DFSTopComponent")
@Messages(
{
	"CTL_DFSAction=DFS",
	"CTL_DFSTopComponent=DFS Window",
	"HINT_DFSTopComponent=This is a DFS window"
})
public final class GraphSearchAlgorithmsTopComponent extends TopComponent implements LookupListener
{
	private DFSGraphScene scene;
	private JComponent sceneView;
	private Lookup.Result<Algorithm> algorithms;
	
	public GraphSearchAlgorithmsTopComponent()
	{
		initComponents();
		setName(Bundle.CTL_DFSTopComponent());
		setToolTipText(Bundle.HINT_DFSTopComponent());

		scene = new DFSGraphScene();
		sceneView = scene.createView();
		sceneScrollPane.setViewportView(sceneView);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sceneScrollPane = new javax.swing.JScrollPane();
        jComboBox1 = new javax.swing.JComboBox();

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sceneScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sceneScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

	private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_jComboBox1ItemStateChanged
	{//GEN-HEADEREND:event_jComboBox1ItemStateChanged
		if(evt.getStateChange() == ItemEvent.SELECTED)
		{
			scene.setAlgorithm((Algorithm)evt.getItem());
		}
	}//GEN-LAST:event_jComboBox1ItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JScrollPane sceneScrollPane;
    // End of variables declaration//GEN-END:variables
	@Override
	public void componentOpened()
	{
		algorithms = Lookup.getDefault().lookupResult(Algorithm.class);
		algorithms.addLookupListener(this);
		fillCombobox();
	}

	@Override
	public void componentClosed()
	{
		algorithms.removeLookupListener(this);
		algorithms = null;
	}
	
	private void fillCombobox()
	{
		for(Algorithm i : algorithms.allInstances())
		{
			jComboBox1.addItem(i);
		}
	}

	void writeProperties(java.util.Properties p)
	{
		// better to version settings since initial version as advocated at
		// http://wiki.apidesign.org/wiki/PropertyFiles
		p.setProperty("version", "1.0");
		// TODO store your settings
	}

	void readProperties(java.util.Properties p)
	{
		String version = p.getProperty("version");
		// TODO read your settings according to their version
	}

	@Override
	public void resultChanged(LookupEvent ev)
	{
		fillCombobox();
	}
}
